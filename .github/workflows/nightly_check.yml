# This workflow aim to run specific UI test multiple times
name: Nightly Check
on:
  workflow_dispatch:
    inputs:
      branch:
        type: choice
        description: Base branch to rebase the PR
        required: true
        options:
          - 'develop'
          - '8.1.x'
          - '8.0.x'
        default: 'develop'
      node_version:
        type: choice
        description: Node version
        required: true
        options:
          - '14'
          - '16'
        default: '14'
      campaign:
        type: string
        description: UI Test Campaign
        required: true
env:
  NODE_VERSION: ${{ github.event.inputs.node_version }}
  PS_BRANCH: ${{ github.event.inputs.branch }}
  PS_DIR: 'my_prestashop'
  UI_CAMPAIGN: ${{ github.event.inputs.campaign }}
  TESTS_DIR: 'tests/UI'
jobs:
  test:
    name: Bulk Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        name:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
          - '12'
          - '13'
          - '14'
          - '15'
          - '16'
          - '17'
          - '18'
          - '19'
          - '20'

    env:
      REPORTS_DIR: 'reports_${{ matrix.BRANCH }}'  # Where to move test's reports
      TEST_CAMPAIGN: 'test:${{ matrix.CAMPAIGN }}'  # Command to execute from the matrix
      PS_LANGUAGE: 'en'
      PS_INSTALL_AUTO: 1
      PS_DEV_MODE: 0
      DB_SERVER: 'mysql'
      DB_NAME: 'prestashop'
      DB_PREFIX: 'tst_'
      DB_USER: 'root'
      DB_PASSWD: 'prestashop'
    steps:
      - name: Print Inputs values
        shell: bash
        run: echo "${{ toJSON(github.event.inputs) }}"

      - name: Checkout
        uses: actions/checkout@v3
        name: Checkout PrestaShop repository
        with:
          fetch-depth: 0
          repository: PrestaShop/PrestaShop
          path: ${{ env.PS_DIR }}

      - name: Config git
        working-directory: ${{ env.PS_DIR }}
        run: |
          git config --local user.email "$(git log --format='%ae' HEAD^!)"
          git config --local user.name "$(git log --format='%an' HEAD^!)"

      - name: Get pull request
        working-directory: ${{ env.PS_DIR }}
        run: |
          git fetch origin
          git checkout ${{ env.PS_BRANCH }}

      # Use docker to create shop
      - name: Build and run shop with docker
        working-directory: ${{ env.PS_DIR }}
        timeout-minutes: 15
        run: |
          USER_ID=$(id -u) GROUP_ID=$(id -g) \
          docker-compose -f docker-compose.yml up -d --build
          bash -c 'while [[ "$(curl -L -s -o /dev/null -w %{http_code} http://localhost:8001/en/)" != "200" ]]; do sleep 5; done'
      
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Install dependencies
        working-directory: ${{ env.PS_DIR }}/${{ env.TESTS_DIR }}
        run: npm install
      
      - name: Run tests
        continue-on-error: true
        working-directory: ${{ env.PS_DIR }}/${{ env.TESTS_DIR }}
        env:
          URL_FO: 'http://localhost:8001/'
          SMTP_SERVER: '172.17.0.1'
          TAKE_SCREENSHOT_AFTER_FAIL: true
          TEST_PATH: ${{ env.UI_CAMPAIGN }}
        run: npm run test:specific

      # Rename and upload report as artifact
      - name: Create screenshot folder name
        run: echo "SCREENSHOT_NAME="$( echo -e '${{ env.TEST_CAMPAIGN }}' | tr  ':' '-'  )"" >> $GITHUB_ENV

      - name: Upload report
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.SCREENSHOT_NAME }}-${{ matrix.name }}
          path: '${{ env.TESTS_DIR }}/screenshots'