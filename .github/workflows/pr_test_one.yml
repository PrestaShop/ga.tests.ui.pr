name: Testing PrestaShop pull requests (without cache)
on:
  workflow_dispatch:
    inputs:
      PR_NUMBER:
        description: Pull request Id
        required: true
        default: 37080
      BASE_BRANCH:
        type: choice
        description: Base branch to rebase the PR
        required: true
        options:
          - 'develop'
          - '8.2.x'
          - '8.1.x'
          - '8.0.x'
          - '1.7.8.x'
        default: 'develop'
      DEV_MODE:
        type: choice
        description: Enable/Disable the developer mode
        required: true
        options:
          - 'true'
          - 'false'
        default: 'false'
      REBASE_OR_MERGE:
        type: choice
        required: true
        description: Rebase or merge the pull request
        options:
          - 'rebase'
          - 'merge'
          - 'head'
        default: 'rebase'
      PHP_VERSION:
        type: choice
        description: PHP version
        required: true
        options:
          - '7.3'
          - '7.4'
          - '8.0'
          - '8.1'
          - '8.2'
          - '8.3'
        default: '8.1'
      NODE_VERSION:
        type: choice
        description: Node version
        required: true
        options:
          - '14.21.3'
          - '16.20.1'
          - '20.17.0'
        default: '20.17.0'
      DB_SERVER:
        type: choice
        description: Database
        required: true
        options:
          - 'mysql'
          - 'mariadb'
        default: 'mysql'

jobs:
  testing-pr:
    runs-on: ubuntu-latest
    name: test
    strategy:
      fail-fast: false
      matrix:
        TEST_CAMPAIGN:
          - 'functional:BO:dashboard'
        BASE_BRANCH:
          - ${{ github.event.inputs.base_branch }}

    steps:
      - name: Print Inputs values
        shell: bash
        run: echo "${{ toJSON(github.event.inputs) }}"

      # Checkout PrestaShop
      - uses: actions/checkout@v4
        name: Checkout PrestaShop repository
        with:
          fetch-depth: 0
          repository: PrestaShop/PrestaShop
          ref: refs/pull/${{ inputs.PR_NUMBER }}/head

      - name: Config git
        run: |
          git config --local user.email "$(git log --format='%ae' HEAD^!)"
          git config --local user.name "$(git log --format='%an' HEAD^!)"

      - name: Rebase or Merge
        if: ${{ inputs.REBASE_OR_MERGE != 'head' }}
        run: |
          git fetch origin ${{ inputs.BASE_BRANCH }}
          git ${{ inputs.REBASE_OR_MERGE }} origin/${{ inputs.BASE_BRANCH }}

      - name: Setup Environment
        timeout-minutes: 15
        uses: ./.github/actions/setup-env
        with:
          PHP_VERSION: ${{ inputs.PHP_VERSION }}
          NODE_VERSION: ${{ inputs.NODE_VERSION }}
          ENABLE_SSL: ${{ env.ENABLE_SSL }}
          INSTALL_AUTO: ${{ env.INSTALL_AUTO }}
          CP_API_CONFIG: ${{ env.CP_API_CONFIG }}
          DEV_MODE: ${{ inputs.DEV_MODE }}
          DB_SERVER: ${{ inputs.DB_SERVER }}
        env:
          ENABLE_SSL: ${{ ((inputs.BASE_BRANCH == '1.7.8.x') || (inputs.BASE_BRANCH == '8.0.x')) && 'false' || 'true' }}
          INSTALL_AUTO: ${{ (matrix.TEST_CAMPAIGN == 'sanity') && 'false' || 'true' }}
          CP_API_CONFIG: ${{ ((matrix.BASE_BRANCH == '8.1.x') || (matrix.BASE_BRANCH == '8.2.x')) && 'true' || 'false' }}
      - name: Setup Environment failure
        uses: ./.github/actions/setup-env-export-logs
        with:
          DOCKER_PREFIX: gatestsuipr
          ARTIFACT_NAME: setup-env-${{ matrix.BASE_BRANCH }}-${{ matrix.TEST_CAMPAIGN }}-${{ inputs.DB_SERVER }}
          DB_SERVER: ${{ inputs.DB_SERVER }}
        if: failure() && matrix.BASE_BRANCH == 'develop'

      # Checkout repository to use custom actions
      - uses: actions/checkout@v4
        with:
          path: custom_actions
      # Keycloak is only needed for API campaign
      - name: Launch keycloak
        uses: ./custom_actions/.github/workflows/actions/launch-keycloak
        if: matrix.TEST_CAMPAIGN == 'functional:API' && matrix.BASE_BRANCH == 'develop'

      - name: Run Tests
        id: runTests
        uses: ./.github/actions/ui-test
        with:
          NODE_VERSION: ${{ inputs.NODE_VERSION }}
          TEST_CAMPAIGN: ${{ matrix.TEST_CAMPAIGN }}
          INSTALL_BROWSERS: ${{ env.INSTALL_BROWSERS }}
          DB_SERVER: ${{ inputs.DB_SERVER }}
          TAKE_SCREENSHOT_AFTER_EACH_STEP: true
        env:
          INSTALL_BROWSERS: ${{ (inputs.BASE_BRANCH == '1.7.8.x') && 'false' || 'true' }}

      - name: Mysql dump
        if: always()
        env:
          DB_USER: root
          DB_PASSWD: prestashop
          DB_NAME: prestashop
        run: |
          docker ps
          mkdir -p ./tests/UI/screenshots
          docker exec gatestsuipr-${{ inputs.DB_SERVER }}-1 ${{ (inputs.DB_SERVER == 'mysql') && '/usr/bin/mysqldump'|| 'mariadb-dump' }} -u ${{ env.DB_USER }} -p${{ env.DB_PASSWD }} ${{ env.DB_NAME }} > ./tests/UI/screenshots/db_dump.sql

      - run: echo "SCREENSHOT_CAMPAIGN=$( echo -e '${{ matrix.TEST_CAMPAIGN }}' | tr ':' '-' )" >> $GITHUB_ENV
        if: always()

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: campaign-${{ env.SCREENSHOT_CAMPAIGN }}
          path: |
            ./tests/UI/screenshots/
            ./var/logs
